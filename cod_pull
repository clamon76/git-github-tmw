c√≥digo Pull

Git pull explicado
Daniel Rosa
Tradutor: Daniel Rosa
freeCodeCamp.org
Autor: freeCodeCamp.org (em ingl√™s)
Git pull explicado
Artigo original: Git Pull Explained

O git pull √© um comando do Git usado para atualizar a vers√£o local de um reposit√≥rio a partir de uma vers√£o remota.

Ele √© um dos quatro comandos que solicita a intera√ß√£o com a rede pelo Git. Por padr√£o, o git pull faz duas coisas.

Atualiza o branch de trabalho local atual (o branch para a qual voc√™ fez o checkout nesse momento).
Atualiza os branches de rastreamento remoto para todos os outros branches.
O git pull obt√©m (git fetch) os novos commits e merges (git merge) desse branch e os coloca em seu branch local.

A sintaxe desse comando √©:

# Formato geral
git pull OP√á√ïES REPOSIT√ìRIO REFSPEC

# Pull de um branch espec√≠fico
git pull NOME-REMOTO NOME-BRANCH
onde:

OP√á√ïES s√£o as op√ß√µes de comando, como --quiet ou --verbose. Voc√™ pode ler mais sobre as diversas op√ß√µes na documenta√ß√£o do Git
REPOSIT√ìRIO √© o URL do seu reposit√≥rio. Exemplo: https://github.com/freeCodeCamp/freeCodeCamp.git
REFSPEC especifica quais refer√™ncias devem ser obtidas (fetch) e quais refer√™ncias locais devem ser atualizadas
NOME-REMOTO √© o nome do seu reposit√≥rio remoto. Por exemplo: origin.
NOME-BRANCH √© o nome do seu branch. Por exemplo: develop.
Observa√ß√£o

Se houver mudan√ßas das quais voc√™ ainda n√£o fez um commit, a parte do merge do comando git pull n√£o ser√° realizada e seu branch local seguir√° inalterado.

Assim, voc√™ sempre deve fazer o commit de suas mudan√ßas em um branch antes de fazer o pull de novos commits de um reposit√≥rio remoto.

Sum√°rio

Usando git pull
Controle de vers√£o distribu√≠do
git fetch + git merge
git pull nos IDEs
Usando git pull
Use o git pull para atualizar o reposit√≥rio local a partir do seu reposit√≥rio remoto correspondente. Exemplo: ao trabalhar localmente com master/main, execute git pull para atualizar a c√≥pia local de master/main e atualizar os outros branches de rastreamento remotos (para saber mais informa√ß√µes sobre os branches de rastreamento remotos, veja a pr√≥xima se√ß√£o).

Por√©m, voc√™ precisa se lembrar de algumas coisas para que o exemplo seja verdadeiro:

O reposit√≥rio local tem um reposit√≥rio remoto vinculado

Verifique isso com o comando git remote -v
Se houver diversos reposit√≥rios remotos, o git pull pode n√£o trazer informa√ß√µes suficientes. Voc√™ pode ter de inserir git pull origin ou git pull upstream.
O branch no qual voc√™ fez o checkout neste momento tem um branch de rastreamento remoto correspondente

Verifique isso com o comando git status. Se n√£o houver um branch de rastreamento remoto, o Git n√£o saber√° onde ele deve buscar as informa√ß√µes para um pull.
Controle de vers√£o distribu√≠do
O Git √© um Sistema de Controle de Vers√£o Distribu√≠do (DVCS). Com um DVCS, os desenvolvedores podem trabalhar no mesmo arquivo ao mesmo tempo em ambientes separados. Depois de fazer o push do c√≥digo para o reposit√≥rio remoto compartilhado, outros desenvolvedores podem fazer o pull do c√≥digo modificado.

Intera√ß√µes com a rede no Git
Existem apenas quatro comandos que solicitam intera√ß√µes com a rede no Git. Um reposit√≥rio local n√£o tem ci√™ncia das altera√ß√µes feitas em um reposit√≥rio remoto at√© que haja uma solicita√ß√£o de informa√ß√µes. Um reposit√≥rio remoto tamb√©m n√£o tem ci√™ncia das altera√ß√µes locais at√© que seja feito o push dos commits.

Os quatro comandos de rede s√£o:

git clone
git fetch
git pull
git push
Branches no DVCS
Ao trabalhar com o Git, pode parecer que h√° v√°rias c√≥pias do mesmo c√≥digo flutuando por a√≠. H√° vers√µes diferentes do mesmo arquivo em cada branch. Assim, c√≥pias diferentes dos mesmos branches no computador de cada desenvolvedor e no reposit√≥rio remoto. Para acompanhar isso, o Git usa algo chamado branches de rastreamento remoto.

Ao executar o comando git branch --all em um reposit√≥rio do Git, os branches de rastreamento remoto aparecem na cor vermelha. Eles s√£o c√≥pias somente para leitura do c√≥digo conforme ele aparece no branch remoto. Quando foi a √∫ltima intera√ß√£o com a rede que pode ter buscado as informa√ß√µes localmente? Lembre-se de quando essas informa√ß√µes foram atualizadas pela √∫ltima vez. As informa√ß√µes dos branches de rastreamento remoto refletem as informa√ß√µes dessa intera√ß√£o.

Com branches de rastreamento remoto, voc√™ pode trabalhar no Git em diversos branches sem intera√ß√£o com a rede. Cada vez que voc√™ executar os comandos git pull ou git fetch, voc√™ atualiza os branches de rastreamento remoto.

git fetch e git merge
git pull √© uma combina√ß√£o de comandos, equivalente a git fetch e git merge juntos.

git fetch
Sozinho, o git fetch atualiza todos os branches de rastreamento remotos do reposit√≥rio local. Nenhuma mudan√ßa √© refletida de fato em qualquer um dos branches de trabalho locais.

git merge
Sem argumentos, o git merge far√° o merge do branch de rastreamento remoto correspondente ao branch de trabalho local.

git pull
O git fetch atualiza os branches de rastreamento remoto. O git merge atualiza o branch atual com o branch de rastreamento remoto correspondente. Usando o git pull, voc√™ tem as duas partes dessas atualiza√ß√µes. Isso, no entanto, significa que, se voc√™ fez o checkout no branch feature e executar o comando git pull, ao fazer o checkout em master/main, as novas atualiza√ß√µes n√£o ser√£o inclu√≠das. Sempre que voc√™ fizer o checkout para outro branch que possa ter novas altera√ß√µes, sempre √© uma boa ideia executar o comando git pull.

git pull nos IDEs
Linguagens comuns em outros IDEs podem n√£o incluir a palavra pull. Se voc√™ buscar as palavras git pull e n√£o as encontrar, busque pela palavra sync em vez disso.

Fazendo o fetch de um PR (Pull Request) remoto em seu reposit√≥rio local
Para fins de confer√™ncia, √© preciso fazer o fetch dos PRs de um reposit√≥rio remoto para o reposit√≥rio local. Voc√™ pode usar o comando git fetch conforme vemos abaixo para conseguir isso.

git fetch origin pull/ID/head:NOME-BRANCH

ID √© o id do pull request e NOME-BRANCH √© o nome do branch que voc√™ quer criar. Quando o branch for criado, voc√™ pode usar o comando git checkout para mudar para aquele branch.

Outros recursos sobre git no editorial do freecodecamp.org (em ingl√™s)
Git merge
Git checkout
Git commit
Git stash
Git branch
Para ver os recursos sobre git j√° traduzidos, acesse o editorial do freecodecamp.org em portugu√™s e busque pela palavra git.
Boa programa√ß√£o! üòÄ


Daniel Rosa
Tradutor: Daniel Rosa
Um profissional dos idiomas humanos apaixonado por linguagens de computador. | A world languages professional in love with computer languages.

freeCodeCamp.org
Autor: freeCodeCamp.org (em ingl√™s)
Ler mais publica√ß√µes.
      
